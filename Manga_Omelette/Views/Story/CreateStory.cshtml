@model Manga_Omelette.Models_Secondary.CreateStoryViewModel
@{
    ViewBag.Title = "Create New Story";
    Layout = "_SuperADMINLayout";
                    <link rel="stylesheet" href="~/css/AdminCSS/EditStory.css" />
}

<div class="view_container">
    <form class="title_section" method="post" enctype="multipart/form-data" id="formCreate">
        <div asp-validation-summary="ModelOnly" class="text-danger" role="alert"></div>
        <div class="right_part">
            <div class="imagePreview">
                <img id="ImagePreview" src="" alt="" />
            </div>
            <label for="fileUpload" class="custom-file-upload">
                Upload Image
            </label>
            <input asp-for="imageFile" id="fileUpload" class="upload_btn" type="file" accept="image/*">
        </div>
        <div class="left_part">
            <div class="title_story">
                <label asp-for="story.Title" class="col-md-2 col-form-label"></label>
                <input asp-for="story.Title" class="form-control" />
                <span asp-validation-for="story.Title" class="text-danger"></span>
            </div>
            <div class="author_story">
                <div class="list_author"></div>
                <div class="select_author">
                    <label for="select_author">Select Author:</label>
                    <select class="form-control" id="select_author" asp-items="@(new SelectList(Model.AllAuthor, "Id", "Name"))"></select>
                </div>
                <div class="list_artist"></div>
                <div class="select_artist">
                    <label for="select_artist">Select Artist:</label>
                    <select class="form-control" id="select_artist" asp-items="@(new SelectList(Model.AllAuthor, "Id", "Name"))"></select>
                </div>
            </div>
            <div class="list_tag_genres"></div>
            <div class="select_genres">
                <label for="select_list">Select Genres:</label>
                <select class="form-control" id="select_list" asp-items="@(new SelectList(Model.AllGenre, "Id", "Name"))"></select>
            </div>
            <div class="description_section">
                <label asp-for="story.Description"></label>
                <textarea spellcheck="false" asp-for="story.Description" placeholder="Add Description..."></textarea>
                <span asp-validation-for="story.Description" class="text-danger"></span>
            </div>
            <input class="submit_btn" type="submit" value="Create">
        </div>
        <input type="hidden" asp-for="GenreIds" name="ListGenreIds" id="ListGenreIds" />
        <input type="hidden" name="ListAuthorIds" id="ListAuthorIds" />
        <input type="hidden" name="ListNewAuthor" id="ListNewAuthor" />
        <input type="hidden" name="ListArtistIds" id="ListArtistIds" />
        <input type="hidden" name="ListNewArtist" id="ListNewArtist" />
    </form>
</div>

@section Scripts{
    <partial name="_ValidationScriptsPartial" />
    <script type="module" src="~/js/ScriptCreateStory/main_script.js"></script>
    <script>
        $(document).ready(function () {
            //Script to Preview Image Upload
            $('#fileUpload').change(function (event) {
                var input = this;
                if (input.files && input.files[0]) {
                    var reader = new FileReader();
                    reader.onload = function (e) {
                        $('#ImagePreview').attr('src', e.target.result);
                    }
                    reader.readAsDataURL(input.files[0]);
                }
            })

            function GenreIdsInput() {
                var genreIds = [];
                $('.list_tag_genres .genre_item').each(function () {
                    genreIds.push($(this).data('id'));
                });
                $('#ListGenreIds').val(genreIds.join(','));
            }
            
            function AuthorIdsInput() {
                var authorIds = [];
                var newAuthor = [];
                $('.list_author .author_item').each(function () {
                    if ($(this).data('id') === $(this).data('name')) {
                        newAuthor.push($(this).data('id'));
                    } else {
                        authorIds.push($(this).data('id'));
                    }
                })
                console.log(authorIds);
                $('#ListAuthorIds').val(authorIds.join(','));
                $('#ListNewAuthor').val(newAuthor.join(','));
            }

            function ArtistIdsInput() {
                var authorIds = [];
                var newAuthor = [];
                $('.list_artist .artist_item').each(function () {
                    if ($(this).data('id') === $(this).data('name')) {
                        newAuthor.push($(this).data('id'));
                    } else {
                        authorIds.push($(this).data('id'));
                    }
                })
                $('#ListArtistIds').val(authorIds.join(','));
                $('#ListNewArtist').val(newAuthor.join(','));
            }

            $(document).on('submit', '#formCreate', function (e) {
                //e.preventDefault();
                GenreIdsInput();
                AuthorIdsInput();
                ArtistIdsInput();
                var length_genre = $('.list_tag_genres .genre_item').length;
                var length_author = $('.list_author .author_item').length;
                var length_artist = $('.list_artist .artist_item').length;

                if (length_genre === 0 || length_author === 0 || length_artist === 0) {
                    e.preventDefault();
                    alert("Please fill all field!");
                }
                
            })
        })
    </script>
}